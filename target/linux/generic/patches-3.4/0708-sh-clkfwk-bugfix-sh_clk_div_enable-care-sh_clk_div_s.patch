From c74748287b24538a74ab360f6dd7a96dc329398a Mon Sep 17 00:00:00 2001
From: Do Quang Thang <dq-thang@jinso.co.jp>
Date: Fri, 15 Feb 2013 13:37:02 +0900
Subject: [PATCH 708/859] sh: clkfwk: bugfix: sh_clk_div_enable() care
 sh_clk_div_set_rate() if div6

764f4e4e33d18cde4dcaf8a0d860b749c6d6d08b
(sh: clkfwk: Use shared sh_clk_div_enable/disable())
shared enable/disable funcions for div4/div6.
But new sh_clk_div_enable() didn't care sh_clk_div_set_rate()
which is required on div6 clock.
This patch fixes it.

Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Signed-off-by: Paul Mundt <lethal@linux-sh.org>
(cherry picked from commit 5a799b824b6046befa7e10107a3d65f40816f645)

Signed-off-by: Do Quang Thang <dq-thang@jinso.co.jp>
---
 drivers/sh/clk/cpg.c | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/drivers/sh/clk/cpg.c b/drivers/sh/clk/cpg.c
index 07e9fb4..d118bac 100644
--- a/drivers/sh/clk/cpg.c
+++ b/drivers/sh/clk/cpg.c
@@ -126,6 +126,12 @@ static int sh_clk_div_set_rate(struct clk *clk, unsigned long rate)
 
 static int sh_clk_div_enable(struct clk *clk)
 {
+	if (clk->div_mask == SH_CLK_DIV6_MSK) {
+		int ret = sh_clk_div_set_rate(clk, clk->rate);
+		if (ret < 0)
+			return ret;
+	}
+
 	sh_clk_write(sh_clk_read(clk) & ~CPG_CKSTP_BIT, clk);
 	return 0;
 }
-- 
1.8.1.4

